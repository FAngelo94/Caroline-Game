using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class TutorialAnimal : InteractAnimal
{
    [Header("Balloon to Show when animal is not hungry")]
    public GameObject notHungryBalloon;

    [Header("Balloon to Show when animal is hungry")]
    public GameObject hungryBalloon;

	[Header("Ballon that contains all the others")]
	public GameObject container;

    [Header("Item needed to interact with this object")]
    public string itemNeeds = "";

    [Header("Smilies")]
    public GameObject happyFace;
    public GameObject sadFace;
    public GameObject helperFace;

    private bool userNear;
    /// <summary>
    /// Become true when player feed animal
    /// </summary>
    private bool hungry;

    private CapsuleCollider2D capsule;
    private helpSequence sequenceScript;
    [Header("Arm of the creature")]
    public GameObject arm;

	private Animator animator;
    private int interactionHash = Animator.StringToHash("Interact");
    private int eatHash = Animator.StringToHash("Eat");

    void Start()
    {
        hungry = true;
        userNear = false;
<<<<<<< HEAD
        sequenceScript = arm.GetComponent<helpSequence>();
        sequenceScript.enabled = false;
        capsule = arm.GetComponent<CapsuleCollider2D>();
        capsule.enabled = false;
		animator = GetComponent<Animator> ();

        sadFace.SetActive(true);
        helperFace.SetActive(false);
        happyFace.SetActive(false);
=======
		animator = gameObject.GetComponent<Animator> ();
        arm.GetComponent<CapsuleCollider2D>().enabled = false;
>>>>>>> Anima2D
    }

    void Update()
    {
        if(userNear)
           StartCoroutine(ManageBalloon());
    }

    private void OnTriggerEnter2D(Collider2D other)
    {
        if (other.tag == "Player")
        {
            userNear = true;
        }
    }

    private void OnTriggerExit2D(Collider2D other)
    {
        if (other.tag == "Player")
        {
            userNear = false;
        }
    }
    
    override
    public void Interaction()
    {
        if (hungry)
        {
            animator.SetTrigger(interactionHash);
        }
    }
    override
    public bool InteractionConditions()
    {
        return userNear;
    }

    override
    public void ObjectUse()
    {
        helperFace.SetActive(true);
        sadFace.SetActive(false);
        ManageInventory.instance.RemoveItem(itemNeeds);
        SoundManager.instance.Eat();
        arm.GetComponent<CapsuleCollider2D>().enabled = true;
        StartCoroutine(WaitForSound());
    }

    IEnumerator WaitForSound()
    {
        yield return new WaitForSeconds(1);
        hungry = false;
        animator.SetTrigger(eatHash);
    }
    
    override
    public bool UseObjectConditions()
    {
        string equippedObject = ManageInventory.instance.ReturnNameEquippedItem();
        if (equippedObject.Equals(itemNeeds) && userNear == true)
            return true;
        return false;
    }
}